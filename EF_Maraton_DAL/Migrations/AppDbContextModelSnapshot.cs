// <auto-generated />
using System;
using EF_Maraton_DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Maraton_DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EF_Maraton_DAL.Entites.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("UserName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CanTokhay",
                            Password = "CAntokhay!!123456"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin2",
                            Password = "CAntokhay!!123456"
                        });
                });

            modelBuilder.Entity("EF_Maraton_DAL.Entites.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActivelySold")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            DiscountRate = 10m,
                            IsActivelySold = true,
                            Name = "Album 1",
                            Price = 100m,
                            PublishDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            DiscountRate = 12m,
                            IsActivelySold = true,
                            Name = "Album 2",
                            Price = 100m,
                            PublishDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            DiscountRate = 0m,
                            IsActivelySold = false,
                            Name = "Album 3",
                            Price = 120m,
                            PublishDate = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 2,
                            DiscountRate = 15m,
                            IsActivelySold = true,
                            Name = "Album 4",
                            Price = 30m,
                            PublishDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 2,
                            DiscountRate = 5m,
                            IsActivelySold = true,
                            Name = "Album 5",
                            Price = 40m,
                            PublishDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 2,
                            DiscountRate = 5m,
                            IsActivelySold = true,
                            Name = "Album 6",
                            Price = 60m,
                            PublishDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 3,
                            DiscountRate = 7m,
                            IsActivelySold = true,
                            Name = "Album 7",
                            Price = 120m,
                            PublishDate = new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 3,
                            DiscountRate = 8m,
                            IsActivelySold = true,
                            Name = "Album 8",
                            Price = 125m,
                            PublishDate = new DateTime(2019, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ArtistId = 3,
                            DiscountRate = 9m,
                            IsActivelySold = true,
                            Name = "Album 9",
                            Price = 120m,
                            PublishDate = new DateTime(2019, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            ArtistId = 4,
                            DiscountRate = 0m,
                            IsActivelySold = false,
                            Name = "Album 10",
                            Price = 10m,
                            PublishDate = new DateTime(1983, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            ArtistId = 4,
                            DiscountRate = 0m,
                            IsActivelySold = true,
                            Name = "Album 11",
                            Price = 110m,
                            PublishDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            ArtistId = 4,
                            DiscountRate = 10m,
                            IsActivelySold = true,
                            Name = "Album 12",
                            Price = 121m,
                            PublishDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            ArtistId = 5,
                            DiscountRate = 18m,
                            IsActivelySold = true,
                            Name = "Album 13",
                            Price = 99m,
                            PublishDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            ArtistId = 5,
                            DiscountRate = 3m,
                            IsActivelySold = true,
                            Name = "Album 14",
                            Price = 97m,
                            PublishDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            ArtistId = 5,
                            DiscountRate = 0m,
                            IsActivelySold = false,
                            Name = "Album 15",
                            Price = 150m,
                            PublishDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EF_Maraton_DAL.Entites.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Artist 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Artist 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Artist 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Artist 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Artist 5"
                        });
                });

            modelBuilder.Entity("EF_Maraton_DAL.Entites.Album", b =>
                {
                    b.HasOne("EF_Maraton_DAL.Entites.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("EF_Maraton_DAL.Entites.Artist", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
